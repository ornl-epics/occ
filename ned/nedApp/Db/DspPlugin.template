record(mbbi, "$(P)$(R)Status")
{
    field(DESC, "Status of RocPlugin")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Status")
    field(ZRVL, "0")
    field(ZRST, "Not initialized")
    field(ONVL, "1")
    field(ONST, "Error")
    field(TWVL, "3")
    field(TWST, "Timeout")
    field(THVL, "4")
    field(THST, "Type wait")
    field(FRVL, "5")
    field(FRST, "Type OK")
    field(FVVL, "6")
    field(FVST, "Version wait")
    field(SXVL, "7")
    field(SXST, "Waiting")
    field(SVVL, "8")
    field(SVST, "Ready")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Command")
{
    field(DESC, "Issue RocPlugin command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Command")
    field(ZRVL, "0")
    field(ZRST, "Reset")
    field(ONVL, "128")
    field(ONST, "Discover")
    field(TWVL, "32")
    field(TWST, "Read version")
    field(THVL, "34")
    field(THST, "Read status")
    field(FRVL, "33")
    field(FRST, "Read config")
    field(FVVL, "48")
    field(FVST, "Write config")
    field(SXVL, "130")
    field(SXST, "Start acquisition")
    field(SVVL, "131")
    field(SVST, "Stop acquisition")
}
record(stringin, "$(P)$(R)HwDate")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))HwDate")
    field(VAL,  "Unknown")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)HwRev")
{
    field(DTYP,  "asynInt32")
    field(INP,   "@asyn($(PORT),$(ADDR),$(TIMEOUT))HwRev")
    field(VAL,   "0")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)HwVer")
{
    field(DTYP,  "asynInt32")
    field(INP,   "@asyn($(PORT),$(ADDR),$(TIMEOUT))HwVer")
    field(VAL,   "0")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)$(R)FwDate")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FwDate")
    field(VAL,  "Unknown")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)FwRev")
{
    field(DTYP,  "asynInt32")
    field(INP,   "@asyn($(PORT),$(ADDR),$(TIMEOUT))FwRev")
    field(VAL,   "0")
    field(SCAN, "I/O Intr")
}
record(longin, "$(P)$(R)FwVer")
{
    field(DTYP,  "asynInt32")
    field(INP,   "@asyn($(PORT),$(ADDR),$(TIMEOUT))FwVer")
    field(VAL,   "0")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)PixIdOffset")
{
    info(autosaveFields, "VAL LOW")
    field(DESC, "Pixel id offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PixIdOffset")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop0Delay")
{
    field(DESC, "Chop0 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop0Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop1Delay")
{
    field(DESC, "Chop1 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop1Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop2Delay")
{
    field(DESC, "Chop2 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop2Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop3Delay")
{
    field(DESC, "Chop3 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop3Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop4Delay")
{
    field(DESC, "Chop4 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop4Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop5Delay")
{
    field(DESC, "Chop5 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop5Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop6Delay")
{
    field(DESC, "Chop6 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop6Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Chop7Delay")
{
    field(DESC, "Chop7 delay for N*9.4ns cycls")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop7Delay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbo, "$(P)$(R)Chop0Freq")
{
    field(DESC, "Chop0 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop0Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop1Freq")
{
    field(DESC, "Chop1 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop1Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop2Freq")
{
    field(DESC, "Chop2 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop2Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop3Freq")
{
    field(DESC, "Chop3 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop3Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop4Freq")
{
    field(DESC, "Chop4 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop4Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop5Freq")
{
    field(DESC, "Chop5 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop5Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop6Freq")
{
    field(DESC, "Chop6 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop6Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(mbbo, "$(P)$(R)Chop7Freq")
{
    field(DESC, "Chop7 frequency selector")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Chop7Freq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longout, "$(P)$(R)ChopDutyCycl")
{
    field(DESC, "N*100ns ref pulse high")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopDutyCycl")
    field(SCAN, "I/O Intr")
    field(VAL,  "83400")
}
record(longout, "$(P)$(R)ChopMaxPerio")
{
    field(DESC, "N*100ns master/ref delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopMaxPerio")
    field(SCAN, "I/O Intr")
    field(VAL,  "166800")
}
record(longout, "$(P)$(R)ChopFixedOff")
{
    field(DESC, "Chopper TOF fixed offset     ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopFixedOff")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)ChopRtdlFr6")
{
    field(DESC, "RTDL Frame 6")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr6")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(longout, "$(P)$(R)ChopRtdlFr7")
{
    field(DESC, "RTDL Frame 7")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr7")
    field(SCAN, "I/O Intr")
    field(VAL,  "5")
}
record(longout, "$(P)$(R)ChopRtdlFr8")
{
    field(DESC, "RTDL Frame 8")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr8")
    field(SCAN, "I/O Intr")
    field(VAL,  "6")
}
record(longout, "$(P)$(R)ChopRtdlFr9")
{
    field(DESC, "RTDL Frame 9")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr9")
    field(SCAN, "I/O Intr")
    field(VAL,  "7")
}
record(longout, "$(P)$(R)ChopRtdlFr10")
{
    field(DESC, "RTDL Frame 10")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr10")
    field(SCAN, "I/O Intr")
    field(VAL,  "8")
}
record(longout, "$(P)$(R)ChopRtdlFr11")
{
    field(DESC, "RTDL Frame 11")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr11")
    field(SCAN, "I/O Intr")
    field(VAL,  "15")
}
record(longout, "$(P)$(R)ChopRtdlFr12")
{
    field(DESC, "RTDL Frame 12")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr12")
    field(SCAN, "I/O Intr")
    field(VAL,  "17")
}
record(longout, "$(P)$(R)ChopRtdlFr13")
{
    field(DESC, "RTDL Frame 13")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr13")
    field(SCAN, "I/O Intr")
    field(VAL,  "24")
}
record(longout, "$(P)$(R)ChopRtdlFr14")
{
    field(DESC, "RTDL Frame 14")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr14")
    field(SCAN, "I/O Intr")
    field(VAL,  "25")
}
record(longout, "$(P)$(R)ChopRtdlFr15")
{
    field(DESC, "RTDL Frame 15")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr15")
    field(SCAN, "I/O Intr")
    field(VAL,  "26")
}
record(longout, "$(P)$(R)ChopRtdlFr16")
{
    field(DESC, "RTDL Frame 16")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr16")
    field(SCAN, "I/O Intr")
    field(VAL,  "28")
}
record(longout, "$(P)$(R)ChopRtdlFr17")
{
    field(DESC, "RTDL Frame 17")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr17")
    field(SCAN, "I/O Intr")
    field(VAL,  "29")
}
record(longout, "$(P)$(R)ChopRtdlFr18")
{
    field(DESC, "RTDL Frame 18")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr18")
    field(SCAN, "I/O Intr")
    field(VAL,  "30")
}
record(longout, "$(P)$(R)ChopRtdlFr19")
{
    field(DESC, "RTDL Frame 19")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr19")
    field(SCAN, "I/O Intr")
    field(VAL,  "31")
}
record(longout, "$(P)$(R)ChopRtdlFr20")
{
    field(DESC, "RTDL Frame 20")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr20")
    field(SCAN, "I/O Intr")
    field(VAL,  "32")
}
record(longout, "$(P)$(R)ChopRtdlFr21")
{
    field(DESC, "RTDL Frame 21")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr21")
    field(SCAN, "I/O Intr")
    field(VAL,  "33")
}
record(longout, "$(P)$(R)ChopRtdlFr22")
{
    field(DESC, "RTDL Frame 22")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr22")
    field(SCAN, "I/O Intr")
    field(VAL,  "34")
}
record(longout, "$(P)$(R)ChopRtdlFr23")
{
    field(DESC, "RTDL Frame 23")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr23")
    field(SCAN, "I/O Intr")
    field(VAL,  "35")
}
record(longout, "$(P)$(R)ChopRtdlFr24")
{
    field(DESC, "RTDL Frame 24")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr24")
    field(SCAN, "I/O Intr")
    field(VAL,  "36")
}
record(longout, "$(P)$(R)ChopRtdlFr25")
{
    field(DESC, "RTDL Frame 25")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr25")
    field(SCAN, "I/O Intr")
    field(VAL,  "37")
}
record(longout, "$(P)$(R)ChopRtdlFr26")
{
    field(DESC, "RTDL Frame 26")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr26")
    field(SCAN, "I/O Intr")
    field(VAL,  "38")
}
record(longout, "$(P)$(R)ChopRtdlFr27")
{
    field(DESC, "RTDL Frame 27")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr27")
    field(SCAN, "I/O Intr")
    field(VAL,  "39")
}
record(longout, "$(P)$(R)ChopRtdlFr28")
{
    field(DESC, "RTDL Frame 28")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr28")
    field(SCAN, "I/O Intr")
    field(VAL,  "40")
}
record(longout, "$(P)$(R)ChopRtdlFr29")
{
    field(DESC, "RTDL Frame 29")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr29")
    field(SCAN, "I/O Intr")
    field(VAL,  "41")
}
record(longout, "$(P)$(R)ChopRtdlFr30")
{
    field(DESC, "RTDL Frame 30")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr30")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
}
record(longout, "$(P)$(R)ChopRtdlFr31")
{
    field(DESC, "RTDL Frame 31")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlFr31")
    field(SCAN, "I/O Intr")
    field(VAL,  "2")
}
record(mbbo, "$(P)$(R)ChopTrefTrig")
{
    field(DESC, "Chopper TREF trigger select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopTrefTrig")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZRVL, "0")
    field(ZRST, "Extract")
    field(ONVL, "1")
    field(ONST, "Cycle Start")
    field(TWVL, "2")
    field(TWST, "Beam On")
    field(THVL, "3")
    field(THST, "TREF event")
}
record(mbbo, "$(P)$(R)ChopTrefFreq")
{
    field(DESC, "TREF frequency select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopTrefFreq")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "60Hz")
    field(ONVL, "1")
    field(ONST, "30Hz")
    field(TWVL, "2")
    field(TWST, "20Hz")
    field(THVL, "3")
    field(THST, "15Hz")
    field(FRVL, "4")
    field(FRST, "12.5Hz")
    field(FVVL, "5")
    field(FVST, "10Hz")
    field(SXVL, "6")
    field(SXST, "7.5Hz")
    field(SVVL, "7")
    field(SVST, "6Hz")
    field(EIVL, "8")
    field(EIST, "5Hz")
    field(NIVL, "9")
    field(NIST, "4Hz")
    field(TEVL, "10")
    field(TEST, "3Hz")
    field(ELVL, "11")
    field(ELST, "2.4Hz")
    field(TVVL, "12")
    field(TVST, "2Hz")
    field(TTVL, "13")
    field(TTST, "1.5Hz")
    field(FTVL, "14")
    field(FTST, "1.25Hz")
    field(FFVL, "15")
    field(FFST, "1Hz")
}
record(longout, "$(P)$(R)ChopRtdlOff")
{
    field(DESC, "Chopper RTDL frame offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopRtdlOff")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)ChopTrefEvNo")
{
    field(DESC, "Chop TREF event trig [0:255]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopTrefEvNo")
    field(SCAN, "I/O Intr")
    field(VAL,  "39")
}
record(longout, "$(P)$(R)ChopHystMinL")
{
    field(DESC, "Chop HYST minimum low [0:7]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopHystMinL")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(longout, "$(P)$(R)ChopHystMinH")
{
    field(DESC, "Chop HYST minimum high [0:7]")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopHystMinH")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(mbbo, "$(P)$(R)ChopFreqCnt")
{
    field(DESC, "Chop frequency count control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopFreqCnt")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZRVL, "0")
    field(ZRST, "strobe at X")
    field(ONVL, " 1")
    field(ONST, "strobe at X-1")
    field(TWVL, " 2")
    field(TWST, "strobe at X-2")
}
record(bo, "$(P)$(R)ChopFreqCyc")
{
    field(DESC, "Chop frequency cycle select")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopFreqCyc")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "Present cycle number")
    field(ONAM, "Next cycle number")
}
record(bo, "$(P)$(R)ChopSweepEn")
{
    field(DESC, "Chop sweep enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ChopSweepEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "TOF fixed off")
    field(ONAM, "TOF fract off")
}
record(longout, "$(P)$(R)STsyncDelMax")
{
    field(DESC, "Synth master strobe max delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))STsyncDelMax")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)STsyncDelAdj")
{
    field(DESC, "Synth master strobe delay adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))STsyncDelAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)STsyncFraAdj")
{
    field(DESC, "Synth master strobe fract adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))STsyncFraAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)TimestHiFake")
{
    field(DESC, "Fake mode timestmp high DWord")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TimestHiFake")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbo, "$(P)$(R)Ch0EdgeDet")
{
    field(DESC, "Chan0 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch1EdgeDet")
{
    field(DESC, "Chan1 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch2EdgeDet")
{
    field(DESC, "Chan2 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch3EdgeDet")
{
    field(DESC, "Chan3 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch4EdgeDet")
{
    field(DESC, "Chan4 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch5EdgeDet")
{
    field(DESC, "Chan5 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch6EdgeDet")
{
    field(DESC, "Chan6 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch6EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch7EdgeDet")
{
    field(DESC, "Chan7 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch7EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch8EdgeDet")
{
    field(DESC, "Chan8 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch8EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch9EdgeDet")
{
    field(DESC, "Chan9 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch9EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch10EdgeDet")
{
    field(DESC, "Chan10 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch10EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch11EdgeDet")
{
    field(DESC, "Chan11 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch11EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch12EdgeDet")
{
    field(DESC, "Chan12 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch12EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch13EdgeDet")
{
    field(DESC, "Chan13 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch13EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch14EdgeDet")
{
    field(DESC, "Chan14 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch14EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch15EdgeDet")
{
    field(DESC, "Chan15 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch15EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch16EdgeDet")
{
    field(DESC, "Chan16 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch16EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch17EdgeDet")
{
    field(DESC, "Chan17 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch17EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch18EdgeDet")
{
    field(DESC, "Chan18 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch18EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch19EdgeDet")
{
    field(DESC, "Chan19 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch19EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch20EdgeDet")
{
    field(DESC, "Chan20 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch20EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch21EdgeDet")
{
    field(DESC, "Chan21 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch21EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch22EdgeDet")
{
    field(DESC, "Chan22 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch22EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch23EdgeDet")
{
    field(DESC, "Chan23 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch23EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch24EdgeDet")
{
    field(DESC, "Chan24 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch24EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch25EdgeDet")
{
    field(DESC, "Chan25 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch25EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch26EdgeDet")
{
    field(DESC, "Chan26 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch26EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch27EdgeDet")
{
    field(DESC, "Chan27 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch27EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch28EdgeDet")
{
    field(DESC, "Chan28 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch28EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch29EdgeDet")
{
    field(DESC, "Chan29 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch29EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch30EdgeDet")
{
    field(DESC, "Chan30 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch30EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(mbbo, "$(P)$(R)Ch31EdgeDet")
{
    field(DESC, "Chan31 edge detection mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch31EdgeDet")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "disable channel")
    field(ONVL, "1")
    field(ONST, "detect ris edge")
    field(TWVL, "2")
    field(TWST, "detect fall edge")
    field(THVL, "3")
    field(THST, "detect any edge")
}
record(longout, "$(P)$(R)Ch0EdgePixId")
{
    field(DESC, "Chan0 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch1EdgePixId")
{
    field(DESC, "Chan1 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch2EdgePixId")
{
    field(DESC, "Chan2 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch3EdgePixId")
{
    field(DESC, "Chan3 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch4EdgePixId")
{
    field(DESC, "Chan4 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch5EdgePixId")
{
    field(DESC, "Chan5 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch6EdgePixId")
{
    field(DESC, "Chan6 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch6EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch7EdgePixId")
{
    field(DESC, "Chan7 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch7EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch8EdgePixId")
{
    field(DESC, "Chan8 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch8EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch9EdgePixId")
{
    field(DESC, "Chan9 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch9EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch10EdgePixId")
{
    field(DESC, "Chan10 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch10EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch11EdgePixId")
{
    field(DESC, "Chan11 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch11EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch12EdgePixId")
{
    field(DESC, "Chan12 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch12EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch13EdgePixId")
{
    field(DESC, "Chan13 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch13EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch14EdgePixId")
{
    field(DESC, "Chan14 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch14EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch15EdgePixId")
{
    field(DESC, "Chan15 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch15EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch16EdgePixId")
{
    field(DESC, "Chan16 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch16EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch17EdgePixId")
{
    field(DESC, "Chan17 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch17EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch18EdgePixId")
{
    field(DESC, "Chan18 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch18EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch19EdgePixId")
{
    field(DESC, "Chan19 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch19EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch20EdgePixId")
{
    field(DESC, "Chan20 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch20EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch21EdgePixId")
{
    field(DESC, "Chan21 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch21EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch22EdgePixId")
{
    field(DESC, "Chan22 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch22EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch23EdgePixId")
{
    field(DESC, "Chan23 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch23EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch24EdgePixId")
{
    field(DESC, "Chan24 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch24EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch25EdgePixId")
{
    field(DESC, "Chan25 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch25EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch26EdgePixId")
{
    field(DESC, "Chan26 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch26EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch27EdgePixId")
{
    field(DESC, "Chan27 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch27EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch28EdgePixId")
{
    field(DESC, "Chan28 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch28EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch29EdgePixId")
{
    field(DESC, "Chan29 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch29EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch30EdgePixId")
{
    field(DESC, "Chan30 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch30EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch31EdgePixId")
{
    field(DESC, "Chan31 edge pixel id")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch31EdgePixId")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch0EdgCycAdj")
{
    field(DESC, "Chan0 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch1EdgCycAdj")
{
    field(DESC, "Chan1 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch2EdgCycAdj")
{
    field(DESC, "Chan2 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch3EdgCycAdj")
{
    field(DESC, "Chan3 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch4EdgCycAdj")
{
    field(DESC, "Chan4 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch5EdgCycAdj")
{
    field(DESC, "Chan5 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch6EdgCycAdj")
{
    field(DESC, "Chan6 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch6EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch7EdgCycAdj")
{
    field(DESC, "Chan7 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch7EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch8EdgCycAdj")
{
    field(DESC, "Chan8 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch8EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch9EdgCycAdj")
{
    field(DESC, "Chan9 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch9EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch10EdgCycAdj")
{
    field(DESC, "Chan10 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch10EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch11EdgCycAdj")
{
    field(DESC, "Chan11 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch11EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch12EdgCycAdj")
{
    field(DESC, "Chan12 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch12EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch13EdgCycAdj")
{
    field(DESC, "Chan13 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch13EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch14EdgCycAdj")
{
    field(DESC, "Chan14 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch14EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch15EdgCycAdj")
{
    field(DESC, "Chan15 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch15EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch16EdgCycAdj")
{
    field(DESC, "Chan16 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch16EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch17EdgCycAdj")
{
    field(DESC, "Chan17 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch17EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch18EdgCycAdj")
{
    field(DESC, "Chan18 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch18EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch19EdgCycAdj")
{
    field(DESC, "Chan19 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch19EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch20EdgCycAdj")
{
    field(DESC, "Chan20 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch20EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch21EdgCycAdj")
{
    field(DESC, "Chan21 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch21EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch22EdgCycAdj")
{
    field(DESC, "Chan22 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch22EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch23EdgCycAdj")
{
    field(DESC, "Chan23 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch23EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch24EdgCycAdj")
{
    field(DESC, "Chan24 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch24EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch25EdgCycAdj")
{
    field(DESC, "Chan25 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch25EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch26EdgCycAdj")
{
    field(DESC, "Chan26 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch26EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch27EdgCycAdj")
{
    field(DESC, "Chan27 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch27EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch28EdgCycAdj")
{
    field(DESC, "Chan28 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch28EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch29EdgCycAdj")
{
    field(DESC, "Chan29 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch29EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch30EdgCycAdj")
{
    field(DESC, "Chan30 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch30EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch31EdgCycAdj")
{
    field(DESC, "Chan31 edge cycle number adj")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch31EdgCycAdj")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch0EdgeDelay")
{
    field(DESC, "Chan0 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch1EdgeDelay")
{
    field(DESC, "Chan1 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch2EdgeDelay")
{
    field(DESC, "Chan2 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch3EdgeDelay")
{
    field(DESC, "Chan3 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch4EdgeDelay")
{
    field(DESC, "Chan4 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch5EdgeDelay")
{
    field(DESC, "Chan5 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch6EdgeDelay")
{
    field(DESC, "Chan6 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch6EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch7EdgeDelay")
{
    field(DESC, "Chan7 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch7EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch8EdgeDelay")
{
    field(DESC, "Chan8 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch8EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch9EdgeDelay")
{
    field(DESC, "Chan9 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch9EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch10EdgeDelay")
{
    field(DESC, "Chan10 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch10EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch11EdgeDelay")
{
    field(DESC, "Chan11 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch11EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch12EdgeDelay")
{
    field(DESC, "Chan12 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch12EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch13EdgeDelay")
{
    field(DESC, "Chan13 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch13EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch14EdgeDelay")
{
    field(DESC, "Chan14 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch14EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch15EdgeDelay")
{
    field(DESC, "Chan15 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch15EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch16EdgeDelay")
{
    field(DESC, "Chan16 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch16EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch17EdgeDelay")
{
    field(DESC, "Chan17 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch17EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch18EdgeDelay")
{
    field(DESC, "Chan18 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch18EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch19EdgeDelay")
{
    field(DESC, "Chan19 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch19EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch20EdgeDelay")
{
    field(DESC, "Chan20 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch20EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch21EdgeDelay")
{
    field(DESC, "Chan21 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch21EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch22EdgeDelay")
{
    field(DESC, "Chan22 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch22EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch23EdgeDelay")
{
    field(DESC, "Chan23 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch23EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch24EdgeDelay")
{
    field(DESC, "Chan24 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch24EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch25EdgeDelay")
{
    field(DESC, "Chan25 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch25EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch26EdgeDelay")
{
    field(DESC, "Chan26 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch26EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch27EdgeDelay")
{
    field(DESC, "Chan27 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch27EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch28EdgeDelay")
{
    field(DESC, "Chan28 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch28EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch29EdgeDelay")
{
    field(DESC, "Chan29 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch29EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch30EdgeDelay")
{
    field(DESC, "Chan30 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch30EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)Ch31EdgeDelay")
{
    field(DESC, "Chan31 edge delay")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch31EdgeDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bo, "$(P)$(R)LvdsRxTxen0")
{
    field(DESC, "LVDS chan0 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen0")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxTxen1")
{
    field(DESC, "LVDS chan1 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen1")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxTxen2")
{
    field(DESC, "LVDS chan2 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen2")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxTxen3")
{
    field(DESC, "LVDS chan3 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen3")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxTxen4")
{
    field(DESC, "LVDS chan4 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen4")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxTxen5")
{
    field(DESC, "LVDS chan5 RX/TX enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxTxen5")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)LvdsRxNoEr0")
{
    field(DESC, "LVDS chan0 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr0")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxNoEr1")
{
    field(DESC, "LVDS chan1 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr1")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxNoEr2")
{
    field(DESC, "LVDS chan2 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr2")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxNoEr3")
{
    field(DESC, "LVDS chan3 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr3")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxNoEr4")
{
    field(DESC, "LVDS chan4 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr4")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxNoEr5")
{
    field(DESC, "LVDS chan5 ignore error pkts")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxNoEr5")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "ignore")
    field(ONAM, "keep")
}
record(bo, "$(P)$(R)LvdsRxDis0")
{
    field(DESC, "LVDS chan0 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis0")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxDis1")
{
    field(DESC, "LVDS chan1 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis1")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxDis2")
{
    field(DESC, "LVDS chan2 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis2")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxDis3")
{
    field(DESC, "LVDS chan3 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis3")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxDis4")
{
    field(DESC, "LVDS chan4 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis4")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxDis5")
{
    field(DESC, "LVDS chan5 disable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDis5")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bo, "$(P)$(R)LvdsRxCmdMod")
{
    field(DESC, "LVDS command parser mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxCmdMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "as command")
    field(ONAM, "as data")
}
record(bo, "$(P)$(R)LvdsRxDatMod")
{
    field(DESC, "LVDS data parser mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDatMod")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "as data")
    field(ONAM, "as command")
}
record(longout, "$(P)$(R)LvdsRxDatSiz")
{
    field(DESC, "LVDS ChLnk data pkt num words")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxDatSiz")
    field(SCAN, "I/O Intr")
    field(VAL,  "4")
}
record(bo, "$(P)$(R)LvdsRxPowCtr")
{
    field(DESC, "Power Down during reset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxPowCtr")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "power down")
    field(ONAM, "power up")
}
record(bo, "$(P)$(R)LvdsRxPowRst")
{
    field(DESC, "Execite power down sequence")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxPowRst")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "execute")
    field(ONAM, "bypass")
}
record(longout, "$(P)$(R)LvdsRxFilter")
{
    field(DESC, "Filter all commands")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsRxFilter")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)LvdsCmdFilt")
{
    field(DESC, "LVDS command to filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsCmdFilt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)LvdsCmdFiltM")
{
    field(DESC, "LVDS command filter mask")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsCmdFiltM")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bo, "$(P)$(R)LvdsTxTclkMo")
{
    field(DESC, "LVDS TX control TCLK mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTclkMo")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "TCLK from int")
    field(ONAM, "TCLK from LVDS")
}
record(mbbo, "$(P)$(R)LvdsTxTcCtrl")
{
    field(DESC, "LVDS TX control T&C TCLK mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTcCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)$(R)LvdsTscynoMo")
{
    field(DESC, "LVDS TSYNC_O mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTscynoMo")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
    field(ZRVL, "0")
    field(ZRST, "local TSYNC")
    field(ONVL, "1")
    field(ONST, "TSYNC from TREF")
    field(TWVL, "2")
    field(TWST, "TSYNC from LVDS")
    field(THVL, "3")
    field(THST, "TSYNC from opt")
}
record(mbbo, "$(P)$(R)LvdsTxTsyncC")
{
    field(DESC, "LVDS TSYNC_NORMAL control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTsyncC")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "polarity")
    field(ONVL, "1")
    field(ONST, "TSYNC WIDTH")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)$(R)LvdsTxSysrCt")
{
    field(DESC, "LVDS T&C SYSRST# buffer ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxSysrCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "sysrst")
    field(ONVL, "1")
    field(ONST, "sysrst")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbo, "$(P)$(R)LvdsTxTxenCt")
{
    field(DESC, "LVDS T&C TXEN# control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTxenCt")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "ChLnk parser")
    field(ONVL, "1")
    field(ONST, "ChLnk parser")
    field(TWVL, "2")
    field(TWST, "ChLnk RX")
    field(THVL, "3")
    field(THST, "ChLnk inv RX")
}
record(longout, "$(P)$(R)LvdsTxOutClk")
{
    field(DESC, "LVDS output clock mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxOutClk")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)LvdsTxCmdRet")
{
    field(DESC, "LVDS downstream retrys")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxCmdRet")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
}
record(bo, "$(P)$(R)LvdsTxWrdL0")
{
    field(DESC, "LVDS chan0 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL0")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)$(R)LvdsTxWrdL1")
{
    field(DESC, "LVDS chan1 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL1")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)$(R)LvdsTxWrdL2")
{
    field(DESC, "LVDS chan2 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL2")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)$(R)LvdsTxWrdL3")
{
    field(DESC, "LVDS chan3 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL3")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)$(R)LvdsTxWrdL4")
{
    field(DESC, "LVDS chan4 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL4")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(bo, "$(P)$(R)LvdsTxWrdL5")
{
    field(DESC, "LVDS chan5 data word length")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxWrdL5")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "RX FIFO data")
    field(ONAM, "set to 4")
}
record(longout, "$(P)$(R)LvdsTxClkMar")
{
    field(DESC, "LVDS clock margin")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxClkMar")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bo, "$(P)$(R)LvdsTxTestPa")
{
    field(DESC, "LVDS T&C test pattern")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTestPa")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)LvdsTxTestEn")
{
    field(DESC, "LVDS test enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxTestEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc0")
{
    field(DESC, "LVDS chan0 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc0")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc1")
{
    field(DESC, "LVDS chan1 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc1")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc2")
{
    field(DESC, "LVDS chan2 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc2")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc3")
{
    field(DESC, "LVDS chan3 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc3")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc4")
{
    field(DESC, "LVDS chan4 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc4")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncSrc5")
{
    field(DESC, "LVDS chan5 TSYNC T&C src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncSrc5")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TSYNC_NORMAL")
    field(ONVL, "1")
    field(ONST, "TSYNC_LOCAL str")
    field(TWVL, "2")
    field(TWST, "TSYNC_LOCA no s")
    field(THVL, "3")
    field(THST, "TRefStrbFixed")
}
record(mbbo, "$(P)$(R)LvdsTsyncMeta")
{
    field(DESC, "LVDS TSYNC metadata src ctrl")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncMeta")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "RTDL")
    field(ONVL, "1")
    field(ONST, "LVDS")
    field(TWVL, "2")
    field(TWST, "detector TSYNC")
    field(THVL, "3")
    field(THST, "OFB[0]")
}
record(longout, "$(P)$(R)LvdsTsyncGen")
{
    field(DESC, "LVDS TSYNC generation divisor")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncGen")
    field(SCAN, "I/O Intr")
    field(VAL,  "20000")
}
record(longout, "$(P)$(R)LvdsTsyncDely")
{
    field(DESC, "LVDS TSYNC delay divisor     ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncDely")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)LvdsTsyncWid")
{
    field(DESC, "LVDS TSYNC width divisor     ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTsyncWid")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbo, "$(P)$(R)OptCrossSwA")
{
    field(DESC, "Crossbar Switch Pass ctrl A")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptCrossSwA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)$(R)OptCrossSwB")
{
    field(DESC, "Crossbar Switch Pass ctrl B")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptCrossSwB")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "1")
    field(ZRST, "Send to trans A")
    field(ONVL, "2")
    field(ONST, "send to trans B")
}
record(mbbo, "$(P)$(R)OptTxOutModeA")
{
    field(DESC, "Optical TX A output mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxOutModeA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(bo, "$(P)$(R)OptTxEocA")
{
    field(DESC, "Optical TX A End of Chain")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxEocA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)OptTxCmdFiltA")
{
    field(DESC, "Optical TX A Command Filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxCmdFiltA")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbo, "$(P)$(R)OptTxOutModeB")
{
    field(DESC, "Optical TX B output mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxOutModeB")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "Normal")
    field(ONVL, "1")
    field(ONST, "Timing")
    field(TWVL, "2")
    field(TWST, "Chopper")
    field(THVL, "3")
    field(THST, "Timing master")
}
record(bo, "$(P)$(R)OptTxEocB")
{
    field(DESC, "Optical TX B End of Chain")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxEocB")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(longout, "$(P)$(R)OptTxCmdFiltB")
{
    field(DESC, "Optical TX B Command Filter")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxCmdFiltB")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(bo, "$(P)$(R)OptHystEn")
{
    field(DESC, "Optical hysteresis enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptHystEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "from TLK data")
    field(ONAM, "match optical")
}
record(bo, "$(P)$(R)OptBlankFrmEn")
{
    field(DESC, "Optical empty data frame CRC")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptBlankFrmEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "no blank frame")
    field(ONAM, "add blank frame")
}
record(longout, "$(P)$(R)OptTxDelay")
{
    field(DESC, "Optical packet send delay    ")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxDelay")
    field(SCAN, "I/O Intr")
    field(VAL,  "3")
}
record(bo, "$(P)$(R)OptTxDelayCtr")
{
    field(DESC, "Optical packet send delay ctr")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTxDelayCtr")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "use OPT_TX_DELAY")
    field(ONAM, "prev word count")
}
record(longout, "$(P)$(R)OptPktMaxSize")
{
    field(DESC, "Optical packet max dwords")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptPktMaxSize")
    field(SCAN, "I/O Intr")
    field(VAL,  "16111")
}
record(bo, "$(P)$(R)OptDataEopEn")
{
    field(DESC, "Optical Neutron data send EOP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptDataEopEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)OptMetaEopEn")
{
    field(DESC, "Optical Metadata send EOP")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptMetaEopEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)OptTofCtrl")
{
    field(DESC, "TOF control")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OptTofCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "fixed TOF")
    field(ONAM, "full time offset")
}
record(longout, "$(P)$(R)FakeTrigInfo")
{
    field(DESC, "Fake Trigger Information")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FakeTrigInfo")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
}
record(mbbo, "$(P)$(R)SysResetMode")
{
    field(DESC, "Reset mode => SYSRST_O#")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysResetMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS T&C")
    field(THVL, "3")
    field(THST, "from optical T&C")
}
record(mbbo, "$(P)$(R)SysStartStopM")
{
    field(DESC, "Start/Stop mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysStartStopM")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "normal")
    field(ONVL, " 1")
    field(ONST, "fake data mode")
    field(TWVL, "2")
    field(TWST, "not defined")
    field(THVL, "3")
    field(THST, "not defined")
}
record(bo, "$(P)$(R)SysFakeTrigEn")
{
    field(DESC, "Fake metadata trigger enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysFakeTrigEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)SysFastSendEn")
{
    field(DESC, "Send data immediately switch")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysFastSendEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "big packets")
    field(ONAM, "send immediately")
}
record(bo, "$(P)$(R)SysPassthruEn")
{
    field(DESC, "Response for passthru command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysPassthruEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "don't send")
    field(ONAM, "send")
}
record(bo, "$(P)$(R)SysStartAckEn")
{
    field(DESC, "Wait for Start/Stop response")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysStartAckEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "don't wait")
    field(ONAM, "wait")
}
record(mbbo, "$(P)$(R)SysRtdlMode")
{
    field(DESC, "RTDL mode")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysRtdlMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "no RTDL")
    field(ONVL, "1")
    field(ONST, "master")
    field(TWVL, "2")
    field(TWST, "slave")
    field(THVL, "3")
    field(THST, "fake mode")
}
record(bo, "$(P)$(R)SysRtdlOutEnA")
{
    field(DESC, "RTDL port A output enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysRtdlOutEnA")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysRtdlOutEnB")
{
    field(DESC, "RTDL port B output enable")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysRtdlOutEnB")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysTofOffEn")
{
    field(DESC, "Enable TOF full offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysTofOffEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysFifSyncEn")
{
    field(DESC, "FIFO sync switch")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysFifSyncEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysRtdlAsData")
{
    field(DESC, "Send RTDL command as data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysRtdlAsData")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysFixRtdlEn")
{
    field(DESC, "Correct RTDL information")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysFixRtdlEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysBadPktEn")
{
    field(DESC, "Send bad packets")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysBadPktEn")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)SysReset")
{
    field(DESC, "Force system reset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SysReset")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bo, "$(P)$(R)Configured")
{
    field(DESC, "Configured")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Configured")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not configured")
    field(ONAM, "configured")
}
record(bo, "$(P)$(R)AcquireStat")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))AcquireStat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bo, "$(P)$(R)ProgramErr")
{
    field(DESC, "WRITE_CNFG during ACQUISITION")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ProgramErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bo, "$(P)$(R)PktLenErr")
{
    field(DESC, "Packet length error")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))PktLenErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bo, "$(P)$(R)UnknwnCmdErr")
{
    field(DESC, "Unrecognized command error")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))UnknwnCmdErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bo, "$(P)$(R)LvdsTxFifFul")
{
    field(DESC, "LVDS TxFIFO went full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsTxFifFul")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "full")
}
record(bo, "$(P)$(R)LvdsCmdErr")
{
    field(DESC, "LVDS command error")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))LvdsCmdErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bo, "$(P)$(R)EepromInitOk")
{
    field(DESC, "EEPROM initialization status")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))EepromInitOk")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not ok")
    field(ONAM, "ok")
}
record(longout, "$(P)$(R)RxNumErrsA")
{
    field(DESC, "RX A errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxNumErrsA")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)RxErrFlagsA")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxErrFlagsA")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bo, "$(P)$(R)RxGoodPacketA")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxGoodPacketA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bo, "$(P)$(R)RxPriFifNotEA")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifNotEA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxPriFifAFulA")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifAFulA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxSecFifNotEA")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxSecFifNotEA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxSecFifAFulA")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxSecFifAFulA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxPtCrsbNotEA")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrsbNotEA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxPtCrbarAFuA")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrbarAFuA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxTransTimeA")
{
    field(DESC, "Timeout Pri/Sec FIFO transfer")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxTransTimeA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bo, "$(P)$(R)RxPriFifFulA")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifFulA")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bo, "$(P)$(R)RxPtCrbarFulA")
{
    field(DESC, "RX while the FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrbarFulA")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)RxNumErrsB")
{
    field(DESC, "RX B errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxNumErrsB")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)RxErrFlagsB")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxErrFlagsB")
    field(SCAN, "I/O Intr")
    field(ZRVL, "8")
    field(ZRST, "packet timeout")
    field(ONVL, "9")
    field(ONST, "SOF/address sw")
    field(TWVL, "10")
    field(TWST, "EOF/address sw")
    field(THVL, "11")
    field(THST, "SOF/hdr sw")
    field(FRVL, "12")
    field(FRST, "EOF/hdr sw")
    field(FVVL, "13")
    field(FVST, "SOF/payload sw")
    field(SXVL, "14")
    field(SXST, "EOF/payload sw")
    field(SVVL, "15")
    field(SVST, "SOF/CRC switch")
    field(EIVL, "16")
    field(EIST, "EOF/CRC switch")
    field(NIVL, "17")
    field(NIST, "CRC low word")
    field(TEVL, "18")
    field(TEST, "CRC high word")
    field(ELVL, "19")
    field(ELST, "pri FIFO al full")
    field(TVVL, "20")
    field(TVST, "sec FIFO al full")
}
record(bo, "$(P)$(R)RxGoodPacketB")
{
    field(DESC, "Last packet was good")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxGoodPacketB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bo, "$(P)$(R)RxPriFifNotEB")
{
    field(DESC, "Stack FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifNotEB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxPriFifAFulB")
{
    field(DESC, "Stack FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifAFulB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxSecFifNotEB")
{
    field(DESC, "Secondary FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxSecFifNotEB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxSecFifAFulB")
{
    field(DESC, "Secondary FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxSecFifAFulB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxPtCrsbNotEB")
{
    field(DESC, "PassThrough FIFO Not Empty")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrsbNotEB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "not empty")
}
record(bo, "$(P)$(R)RxPtCrbarAFuB")
{
    field(DESC, "PassThrough FIFO Almost Full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrbarAFuB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)RxTransTimeB")
{
    field(DESC, "Timeout Pri/Sec FIFO transfer")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxTransTimeB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bo, "$(P)$(R)RxPriFifFulB")
{
    field(DESC, "RX pkt while stack almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPriFifFulB")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bo, "$(P)$(R)RxPtCrbarFulB")
{
    field(DESC, "RX while the FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RxPtCrbarFulB")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch0RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch0RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch0RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch0RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch0RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch0RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch0ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch0ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch0NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch0NumErrors")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch1RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch1RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch1RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch1RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch1RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch1RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch1ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch1ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch1NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch1NumErrors")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch2RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch2RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch2RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch2RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch2RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch2RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch2ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch2ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch2NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch2NumErrors")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch3RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch3RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch3RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch3RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch3RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch3RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch3ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch3ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch3NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch3NumErrors")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch4RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch4RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch4RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch4RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch4RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch4RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch4ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch4ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch4NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch4NumErrors")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Ch5RxFlags")
{
    field(DESC, "Error flags")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxFlags")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "parity error")
    field(ONVL, "1")
    field(ONST, "packet type err")
    field(TWVL, "2")
    field(TWST, "start&last set")
    field(THVL, "3")
    field(THST, "len >300 words")
    field(FRVL, "4")
    field(FRST, "FIFO timeout")
    field(FVVL, "5")
    field(FVST, "no first word")
    field(SXVL, "6")
    field(SXST, "last befor first")
    field(SVVL, "7")
    field(SVST, "out FIFO full")
}
record(mbbo, "$(P)$(R)Ch5RxStatus")
{
    field(DESC, "Status OK")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxStatus")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "good cmd packet")
    field(ONVL, "1")
    field(ONST, "good data packet")
}
record(bo, "$(P)$(R)Ch5RxHasData")
{
    field(DESC, "External FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxHasData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch5RxFifoAlFu")
{
    field(DESC, "External FIFO almost full")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxFifoAlFu")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch5RxParsHD")
{
    field(DESC, "ChLnk pkt pars FIFO has data")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxParsHD")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bo, "$(P)$(R)Ch5RxParsAF")
{
    field(DESC, "ChLnk pkt pars FIFO almost fu")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5RxParsAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not full")
    field(ONAM, "almost full")
}
record(bo, "$(P)$(R)Ch5ExtFifEn")
{
    field(DESC, "External FIFO Read enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5ExtFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(bo, "$(P)$(R)Ch5ParsFifEn")
{
    field(DESC, "ChLnk pkt pars FIFO Write en")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5ParsFifEn")
    field(SCAN, "I/O Intr")
    field(ZNAM, "disabled")
    field(ONAM, "enabled")
}
record(longout, "$(P)$(R)Ch5NumErrors")
{
    field(DESC, "Data packet errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Ch5NumErrors")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)NumGoodPkts")
{
    field(DESC, "Good data packet count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NumGoodPkts")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)MetadataInfo0")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MetadataInfo0")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)MetadataInfo1")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MetadataInfo1")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)MetadataInfo2")
{
    field(DESC, "Metadata channel info")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))MetadataInfo2")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)DetailInfo")
{
    field(DESC, "Detailed info")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))DetailInfo")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)TofOffset")
{
    field(DESC, "TOF offset")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TofOffset")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)RtdlInfo")
{
    field(DESC, "RTDL info")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RtdlInfo")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)NumBadRtdl")
{
    field(DESC, "RTDL frame CRC errors count")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NumBadRtdl")
    field(SCAN, "I/O Intr")
}
record(longout, "$(P)$(R)NumBadData")
{
    field(DESC, "Ev Link frame CRC errors cnt")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))NumBadData")
    field(SCAN, "I/O Intr")
}
