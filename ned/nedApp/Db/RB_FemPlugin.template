record(bi, "$(P)Ch2FifoFull")
{
    field(DESC, "Chan2 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2StartErr")
{
    field(DESC, "Chan2 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2NoStart")
{
    field(DESC, "Chan2 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2Timeout")
{
    field(DESC, "Chan2 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch2LenLong")
{
    field(DESC, "Chan2 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2LenShort")
{
    field(DESC, "Chan2 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2DatCmdEr")
{
    field(DESC, "Chan2 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch2ParityEr")
{
    field(DESC, "Chan2 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1FifoFull")
{
    field(DESC, "Chan1 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1StartErr")
{
    field(DESC, "Chan1 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1NoStart")
{
    field(DESC, "Chan1 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1Timeout")
{
    field(DESC, "Chan1 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch1LenLong")
{
    field(DESC, "Chan1 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1LenShort")
{
    field(DESC, "Chan1 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1DatCmdEr")
{
    field(DESC, "Chan1 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch1ParityEr")
{
    field(DESC, "Chan1 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4FifoFull")
{
    field(DESC, "Chan4 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4StartErr")
{
    field(DESC, "Chan4 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4NoStart")
{
    field(DESC, "Chan4 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4Timeout")
{
    field(DESC, "Chan4 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch4LenLong")
{
    field(DESC, "Chan4 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4LenShort")
{
    field(DESC, "Chan4 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4DatCmdEr")
{
    field(DESC, "Chan4 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch4ParityEr")
{
    field(DESC, "Chan4 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3FifoFull")
{
    field(DESC, "Chan3 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3StartErr")
{
    field(DESC, "Chan3 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3NoStart")
{
    field(DESC, "Chan3 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3Timeout")
{
    field(DESC, "Chan3 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch3LenLong")
{
    field(DESC, "Chan3 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3LenShort")
{
    field(DESC, "Chan3 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3DatCmdEr")
{
    field(DESC, "Chan3 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch3ParityEr")
{
    field(DESC, "Chan3 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6FifoFull")
{
    field(DESC, "Chan6 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6StartErr")
{
    field(DESC, "Chan6 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6NoStart")
{
    field(DESC, "Chan6 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6Timeout")
{
    field(DESC, "Chan6 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch6LenLong")
{
    field(DESC, "Chan6 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6LenShort")
{
    field(DESC, "Chan6 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6DatCmdEr")
{
    field(DESC, "Chan6 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch6ParityEr")
{
    field(DESC, "Chan6 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5FifoFull")
{
    field(DESC, "Chan5 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5StartErr")
{
    field(DESC, "Chan5 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5NoStart")
{
    field(DESC, "Chan5 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5Timeout")
{
    field(DESC, "Chan5 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch5LenLong")
{
    field(DESC, "Chan5 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5LenShort")
{
    field(DESC, "Chan5 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5DatCmdEr")
{
    field(DESC, "Chan5 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch5ParityEr")
{
    field(DESC, "Chan5 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8FifoFull")
{
    field(DESC, "Chan8 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8StartErr")
{
    field(DESC, "Chan8 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8NoStart")
{
    field(DESC, "Chan8 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8Timeout")
{
    field(DESC, "Chan8 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch8LenLong")
{
    field(DESC, "Chan8 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8LenShort")
{
    field(DESC, "Chan8 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8DatCmdEr")
{
    field(DESC, "Chan8 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch8ParityEr")
{
    field(DESC, "Chan8 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7FifoFull")
{
    field(DESC, "Chan7 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7StartErr")
{
    field(DESC, "Chan7 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7NoStart")
{
    field(DESC, "Chan7 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7Timeout")
{
    field(DESC, "Chan7 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch7LenLong")
{
    field(DESC, "Chan7 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7LenShort")
{
    field(DESC, "Chan7 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7DatCmdEr")
{
    field(DESC, "Chan7 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch7ParityEr")
{
    field(DESC, "Chan7 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10FifoFull")
{
    field(DESC, "Chan10 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch10StartEre")
{
    field(DESC, "Chan10 got START during packe")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10StartEre")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10NoStart")
{
    field(DESC, "Chan10 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10Timeout")
{
    field(DESC, "Chan10 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch10LenLong")
{
    field(DESC, "Chan10 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10LenShort")
{
    field(DESC, "Chan10 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10DatCmdEr")
{
    field(DESC, "Chan10 DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch10ParityEr")
{
    field(DESC, "Chan10 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9FifoFull")
{
    field(DESC, "Chan9 FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9FifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9StartErr")
{
    field(DESC, "Chan9 got START during packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9StartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9NoStart")
{
    field(DESC, "Chan9 got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9NoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9Timeout")
{
    field(DESC, "Chan9 got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9Timeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)Ch9LenLong")
{
    field(DESC, "Chan9 long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9LenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9LenShort")
{
    field(DESC, "Chan9 short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9LenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9DatCmdEr")
{
    field(DESC, "Chan9 DATA/COMMAND type error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9DatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)Ch9ParityEr")
{
    field(DESC, "Chan9 parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9ParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(longin, "$(P)NacksFilterd")
{
    field(DESC, "Filtered NACK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NacksFilterd")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)NackFilterd")
{
    field(DESC, "Filtered NACK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))NackFilterd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)EepromError")
{
    field(DESC, "EEPROM error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromError")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)HwMissing")
{
    field(DESC, "Missing hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))HwMissing")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not missing")
    field(ONAM, "missing")
}
record(bi, "$(P)Unconfig")
{
    field(DESC, "Unconfigured")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Unconfig")
    field(SCAN, "I/O Intr")
    field(ZNAM, "configured")
    field(ONAM, "not confiured")
}
record(bi, "$(P)ProgramErr")
{
    field(DESC, "Programming error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ProgramErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CmdLenErr")
{
    field(DESC, "Command length error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdLenErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)UnknownCmd")
{
    field(DESC, "Unknown command")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))UnknownCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlFifoFull")
{
    field(DESC, "CTRL FIFO went full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoFull")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlStartErr")
{
    field(DESC, "CTRL got START during packe")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlStartErr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlNoStart")
{
    field(DESC, "CTRL got data without START")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlNoStart")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlTimeout")
{
    field(DESC, "CTRL got TIMEOUT")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlTimeout")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no timeout")
    field(ONAM, "timeout")
}
record(bi, "$(P)CtrlLenLong")
{
    field(DESC, "CTRL long packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlLenLong")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlLenShort")
{
    field(DESC, "CTRL short packet error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlLenShort")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlDatCmdEr")
{
    field(DESC, "CTRL DATA/COMMAND type err")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlDatCmdEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(bi, "$(P)CtrlParityEr")
{
    field(DESC, "CTRL parity error")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlParityEr")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no error")
    field(ONAM, "error")
}
record(longin, "$(P)FilterdNacks")
{
    field(DESC, "Filtered NACKS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FilterdNacks")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)Ch8GotCmd")
{
    field(DESC, "Chan8 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8GotData")
{
    field(DESC, "Chan8 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7GotCmd")
{
    field(DESC, "Chan7 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7GotData")
{
    field(DESC, "Chan7 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6GotCmd")
{
    field(DESC, "Chan6 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6GotData")
{
    field(DESC, "Chan6 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5GotCmd")
{
    field(DESC, "Chan5 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5GotData")
{
    field(DESC, "Chan5 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4GotCmd")
{
    field(DESC, "Chan4 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4GotData")
{
    field(DESC, "Chan4 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3GotCmd")
{
    field(DESC, "Chan3 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3GotData")
{
    field(DESC, "Chan3 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2GotCmd")
{
    field(DESC, "Chan2 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2GotData")
{
    field(DESC, "Chan2 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1GotCmd")
{
    field(DESC, "Chan1 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1GotData")
{
    field(DESC, "Chan1 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)FilterdAcks")
{
    field(DESC, "Filtered ACKS")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FilterdAcks")
    field(SCAN, "I/O Intr")
}
record(bi, "$(P)AcquireStat")
{
    field(DESC, "Acquiring data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))AcquireStat")
    field(SCAN, "I/O Intr")
    field(ZNAM, "not acquiring")
    field(ONAM, "acquiring")
}
record(bi, "$(P)FoundHw")
{
    field(DESC, "Found new hardware")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FoundHw")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlGotCmd")
{
    field(DESC, "CTRL got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlGotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlGotData")
{
    field(DESC, "CTRL got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlGotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch10GotCmd")
{
    field(DESC, "Chan10 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch10GotData")
{
    field(DESC, "Chan10 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9GotCmd")
{
    field(DESC, "Chan9 got command packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9GotCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9GotData")
{
    field(DESC, "Chan9 got data packet")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9GotData")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8FifCmd")
{
    field(DESC, "Chan8 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8FifCmd")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch8FifoNE")
{
    field(DESC, "Chan8 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch7FifoAF")
{
    field(DESC, "Chan7 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch7FifoNE")
{
    field(DESC, "Chan7 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch6FifoAF")
{
    field(DESC, "Chan6 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch6FifoNE")
{
    field(DESC, "Chan6 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch5FifoAF")
{
    field(DESC, "Chan5 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch5FifoNE")
{
    field(DESC, "Chan5 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch4FifoAF")
{
    field(DESC, "Chan4 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch4FifoNE")
{
    field(DESC, "Chan4 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch3FifoAF")
{
    field(DESC, "Chan3 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch3FifoNE")
{
    field(DESC, "Chan3 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch2FifoAF")
{
    field(DESC, "Chan2 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch2FifoNE")
{
    field(DESC, "Chan2 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch1FifoAF")
{
    field(DESC, "Chan1 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch1FifoNE")
{
    field(DESC, "Chan1 FIFO not empty")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdFifoAF")
{
    field(DESC, "CMD FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdFifoNE")
{
    field(DESC, "CMD FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdFifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CmdInFifAF")
{
    field(DESC, "CMD input FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CmdInFifNE")
{
    field(DESC, "CMD input FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CmdInFifNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)CtrlFifoAF")
{
    field(DESC, "CTRL FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)CtrlFifoNE")
{
    field(DESC, "CTRL FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))CtrlFifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch10FifoAF")
{
    field(DESC, "Chan10 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch10FifoNE")
{
    field(DESC, "Chan10 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(bi, "$(P)Ch9FifoAF")
{
    field(DESC, "Chan9 FIFO almost full")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9FifoAF")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(bi, "$(P)Ch9FifoNE")
{
    field(DESC, "Chan9 FIFO has data")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9FifoNE")
    field(SCAN, "I/O Intr")
    field(ZNAM, "empty")
    field(ONAM, "has data")
}
record(longin, "$(P)FilterdResp")
{
    field(DESC, "Filtered responses")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FilterdResp")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)SysrstB")
{
    field(DESC, "Sysrst_B low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))SysrstB")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low - not ok")
    field(TWVL, "2")
    field(TWST, "high")
    field(THVL, "3")
    field(THST, "low and high - n")
}
record(mbbi, "$(P)TxEnable")
{
    field(DESC, "TXEN low/high detected")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxEnable")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low")
    field(TWVL, "2")
    field(TWST, "high - not ok")
    field(THVL, "3")
    field(THST, "low and high - n")
}
record(mbbi, "$(P)Tsync")
{
    field(DESC, "TSYNC")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tsync")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low - not ok")
    field(TWVL, "2")
    field(TWST, "high - not ok")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Tclk")
{
    field(DESC, "TCLK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Tclk")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "low - not ok")
    field(TWVL, "2")
    field(TWST, "high - not ok")
    field(THVL, "3")
    field(THST, "low and high")
}
record(longin, "$(P)HwIdCnt")
{
    field(DESC, "Hardware ID count")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))HwIdCnt")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)Mlos4")
{
    field(DESC, "MLOS1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos4")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos3")
{
    field(DESC, "MLOS2")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos3")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos2")
{
    field(DESC, "MLOS3")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos2")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)Mlos1")
{
    field(DESC, "MLOS4")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Mlos1")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(bi, "$(P)LvdsVerf")
{
    field(DESC, "Detected LVDS verify")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsVerf")
    field(SCAN, "I/O Intr")
    field(ZNAM, "no")
    field(ONAM, "yes")
}
record(longin, "$(P)EepromCode")
{
    field(DESC, "EEPROM code")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))EepromCode")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)LvdsDin6")
{
    field(DESC, "LVDS_DIN6")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin6")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin5")
{
    field(DESC, "LVDS_DIN5")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin5")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin4")
{
    field(DESC, "LVDS_DIN4")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin4")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin3")
{
    field(DESC, "LVDS_DIN3")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin3")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin2")
{
    field(DESC, "LVDS_DIN2")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin2")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin1")
{
    field(DESC, "LVDS_DIN1")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin1")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin0")
{
    field(DESC, "LVDS_DIN0")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin0")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsClk")
{
    field(DESC, "LVDS_CLK")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsClk")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin14")
{
    field(DESC, "LVDS_DIN14")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin14")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin13")
{
    field(DESC, "LVDS_DIN13")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin13")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin12")
{
    field(DESC, "LVDS_DIN12")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin12")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin11")
{
    field(DESC, "LVDS_DIN11")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin11")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin10")
{
    field(DESC, "LVDS_DIN10")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin10")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin9")
{
    field(DESC, "LVDS_DIN9")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin9")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin8")
{
    field(DESC, "LVDS_DIN8")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin8")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin7")
{
    field(DESC, "LVDS_DIN7")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin7")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(longin, "$(P)LvdsPort")
{
    field(DESC, "LVDS port")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsPort")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)LvdsDin20")
{
    field(DESC, "LVDS_DIN20")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin20")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin19")
{
    field(DESC, "LVDS_DIN19")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin19")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin18")
{
    field(DESC, "LVDS_DIN18")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin18")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin17")
{
    field(DESC, "LVDS_DIN17")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin17")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin16")
{
    field(DESC, "LVDS_DIN16")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin16")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(mbbi, "$(P)LvdsDin15")
{
    field(DESC, "LVDS_DIN15")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsDin15")
    field(SCAN, "I/O Intr")
    field(ZRVL, "0")
    field(ZRST, "empty")
    field(ONVL, "1")
    field(ONST, "always low")
    field(TWVL, "2")
    field(TWST, "always high")
    field(THVL, "3")
    field(THST, "low and high")
}
record(bi, "$(P)LvdsMonitor")
{
    info(autosaveFields, "VAL")
    field(DESC, "LVDS debug monitor")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LvdsMonitor")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(mbbi, "$(P)TxenCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TXEN control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxenCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TXEN")
    field(ONVL, "1")
    field(ONST, "TXEN")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)TsyncCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TSYNC control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TsyncCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "from polariry")
    field(ONVL, "1")
    field(ONST, "from TSYNC width")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)TclkCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "TCLK control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TclkCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "TCLK")
    field(ONVL, "1")
    field(ONST, "TCLK")
    field(TWVL, "2")
    field(TWST, "always 0")
    field(THVL, "3")
    field(THST, "always 1")
}
record(mbbi, "$(P)ResetCtrl")
{
    info(autosaveFields, "VAL")
    field(DESC, "Reset control")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ResetCtrl")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZRVL, "0")
    field(ZRST, "not used")
    field(ONVL, "1")
    field(ONST, "not used")
    field(TWVL, "2")
    field(TWST, "from LVDS")
    field(THVL, "3")
    field(THST, "from optic")
}
record(bi, "$(P)VerboseDisc")
{
    info(autosaveFields, "VAL")
    field(DESC, "Verbose discover")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))VerboseDisc")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)VerboseRsp")
{
    info(autosaveFields, "VAL")
    field(DESC, "Verbose command response")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))VerboseRsp")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "disable")
    field(ONAM, "enable")
}
record(bi, "$(P)Ch10Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan10 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch10Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch9Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan9 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch9Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch8Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan8 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch8Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch7Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan7 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch7Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch6Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan6 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch6Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch5Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan5 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch5Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch4Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan4 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch4Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch3Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan3 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch3Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch2Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan2 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch2Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)Ch1Disable")
{
    info(autosaveFields, "VAL")
    field(DESC, "Chan1 disable")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Ch1Disable")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "enable")
    field(ONAM, "disable")
}
record(bi, "$(P)TxenMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TXEN mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TxenMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)TsyncMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TSYNC mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TsyncMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)TclkMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "TCLK mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))TclkMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "external")
    field(ONAM, "internal")
}
record(bi, "$(P)ResetMode")
{
    info(autosaveFields, "VAL")
    field(DESC, "Reset mode")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ResetMode")
    field(SCAN, "I/O Intr")
    field(VAL,  "1")
    field(ZNAM, "internal")
    field(ONAM, "external")
}
