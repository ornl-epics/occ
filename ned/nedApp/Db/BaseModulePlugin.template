record(bo, "$(P)Enable")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Enable")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(VAL,  "1")
    field(PINI, "YES")
}
record(longin, "$(P)ProcCount")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))ProcCount")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(longin, "$(P)RxCount")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))RxCount")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(stringin, "$(P)HardwareId")
{
    field(DESC, "Hardware ID address")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))HardwareId")
    field(SCAN, "Passive")
    field(PINI, "YES")
}
record(mbbi, "$(P)LastCmdRsp")
{
    field(DESC, "Last command response status")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))LastCmdRsp")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(FLNK, "$(P)StatChange")
    field(ZRVL, "0")
    field(ZRST, "None issued")
    field(ONVL, "1")
    field(ONST, "Success")
    field(TWVL, "2")
    field(TWST, "Waiting")
    field(THVL, "3")
    field(THST, "Timeout")
    field(FRVL, "4")
    field(FRST, "Error")
}
record(fanout, "$(P)StatChange")
{
    field(DESC, "Status change fanout")
    field(LNK1, "$(P)VerProc")
}
record(mbbo, "$(P)Command")
{
    field(DESC, "Issue RocPlugin command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT))Command")
    field(ZRVL, "0")
    field(ZRST, "Reset")
    field(ONVL, "128")
    field(ONST, "Discover")
    field(TWVL, "32")
    field(TWST, "Read version")
    field(THVL, "34")
    field(THST, "Read status")
    field(FRVL, "33")
    field(FRST, "Read config")
    field(FVVL, "48")
    field(FVST, "Write config")
    field(SXVL, "130")
    field(SXST, "Start acquisition")
    field(SVVL, "131")
    field(SVST, "Stop acquisition")
}
record(stringin, "$(P)HardwareDate")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))HardwareDate")
    field(VAL,  "Unknown")
    field(SCAN, "Passive")
}
record(longin, "$(P)HardwareRev")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))HardwareRev")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(longin, "$(P)HardwareVer")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))HardwareVer")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(stringin, "$(P)FirmwareDate")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT))FirmwareDate")
    field(VAL,  "Unknown")
    field(SCAN, "Passive")
}
record(longin, "$(P)FirmwareRev")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FirmwareRev")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(longin, "$(P)FirmwareVer")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))FirmwareVer")
    field(VAL,  "0")
    field(SCAN, "Passive")
}
record(fanout, "$(P)VerFanout")
{
    field(DESC, "Version records fanout")
    field(LNK1, "$(P)HardwareVer")
    field(LNK2, "$(P)HardwareRev")
    field(LNK3, "$(P)HardwareDate")
    field(LNK4, "$(P)FirmwareVer")
    field(LNK5, "$(P)FirmwareRev")
    field(LNK6, "$(P)FirmwareDate")
}
record(calcout, "$(P)VerProc")
{
    field(DESC, "Detect version query")
    field(INPA, "$(P)Command NPP")
    field(INPB, "$(P)LastCmdRsp NPP")
    field(CALC, "(A=2)&&(B=1)")
    field(OUT,  "$(P)VerFanout.PROC")
    field(OOPT, "When Non-zero")
    field(OEVT, "1")
}
record(bi, "$(P)Supported")
{
    field(DESC, "Is module supported")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Supported")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(ZNAM, "Not supported")
    field(ONAM, "Supported")
}
record(mbbi, "$(P)Verified")
{
    field(DESC, "Conn,version,type verified")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Verified")
    field(SCAN, "I/O Intr")
    field(PINI, "YES")
    field(ZRVL, "0")
    field(ZRST, "Not verified")
    field(ZRSV, "MINOR")
    field(ONVL, "1")
    field(ONST, "Type OK")
    field(TWVL, "2")
    field(TWST, "Type mismatch")
    field(TWSV, "MAJOR")
    field(THVL, "3")
    field(THST, "Version OK")
    field(FRVL, "4")
    field(FRST, "Version mismatch")
    field(FRSV, "MAJOR")
    field(EIVL, "5")
    field(EIST, "Type & version OK")
}
record(mbbi, "$(P)Type")
{
    field(DESC, "Module type")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))Type")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(ZRVL, "32")
    field(ONVL, "33")
    field(TWVL, "34")
    field(FRVL, "37")
    field(FVVL, "41")
    field(SXVL, "42")
    field(SVVL, "43")
    field(EIVL, "48")
    field(NIVL, "64")
    field(TEVL, "160")
    field(ELVL, "161")
    field(TVVL, "162")
    field(TTVL, "170")
    field(ZRST, "ROC")
    field(ONST, "AROC")
    field(TWST, "HROC")
    field(FRST, "BLNROC")
    field(FVST, "CROC")
    field(SXST, "IROC")
    field(SVST, "BIDIMROC")
    field(EIST, "DSP")
    field(NIST, "SANSROC")
    field(TEST, "ACPC")
    field(ELST, "ACPCFEM")
    field(TVST, "FFC")
    field(TTST, "FEM")
}
