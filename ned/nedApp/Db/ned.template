record(mbbi, "$(P)$(R)Status")
{
    field(DESC, "Status of OccPortDriver")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Status")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "OK")
    field(ONST, "RX buffer full")
    field(TWST, "OCC error")
    field(SCAN, "I/O Intr")
}
record(mbbo, "$(P)$(R)Command")
{
    field(DESC, "Issue OccPortDriver command")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Command")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "None")
    field(ONST, "Optics enable")
}
record(mbbi, "$(P)$(R)BoardStatus")
{
    field(DESC, "OCC board status")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BoardStatus")
    # Those match to return code of occ_open()
    field(ZRVL, "0")
    field(ONVL, "1")  # EPERM
    field(TWVL, "2")  # ENOENT
    field(THVL, "42") # ENOMSG
    field(FRVL, "61") # ENODATA
    field(ZRST, "Ready")
    field(ONST, "Permission denied")
    field(TWST, "No device")
    field(THST, "Version mismatch")
    field(FRST, "Interface error")
    field(SCAN, "I/O Intr")
}
record(mbbi, "$(P)$(R)BoardType")
{
    field(DESC, "OCC board type")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BoardType")
    field(ONVL, "1")
    field(TWVL, "2")
    field(FFVL, "15")
    field(ONST, "SNS PCI-X")
    field(TWST, "SNS PCI Express")
    field(FFST, "Simulator")
}
record(bi, "$(P)$(R)BoardFwVer")
{
    field(DESC, "OCC board firmware version")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))BoardFwVer")
}
record(bo, "$(P)$(R)OpticsPresent")
{
    field(DESC, "Is optical cable present")
    field(PINI, "YES")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OpticsPresent")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(SCAN, "1 second")
}
record(bo, "$(P)$(R)OpticsEnabled")
{
    field(DESC, "Is optical link enabled")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))OpticsEnabled")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(SCAN, "I/O Intr")
}
